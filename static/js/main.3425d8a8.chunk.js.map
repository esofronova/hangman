{"version":3,"sources":["app.js","index.js"],"names":["Hangman","phrases","useState","Math","floor","random","length","word","wordArr","letter","push","counter","setCounter","result","setResult","matchArr","setMatchArr","finalArr","window","onkeydown","e","search","key","newMatchArr","document","querySelector","children","forEach","item","innerHTML","JSON","stringify","className","style","width","map","index","height","userSelect","includes","onClick","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"oPAGe,SAASA,IAErB,IAF+B,EAEzBC,EAAU,CACb,cACA,eACA,aACA,gBACA,kBACA,kBACA,iBACA,qBACA,sBACA,kBAGH,EAAaC,mBAASD,EAAQE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQK,UAA5DC,EAAL,oBACIC,EAAU,GAhBiB,cAiBZD,GAjBY,IAiB/B,2BAAyB,CAAC,IAAjBE,EAAgB,QAAED,EAAQE,KAAKD,IAjBT,8BAmB/B,IACA,EAA4BP,mBAAS,IAArC,mBAAKS,EAAL,KAAcC,EAAd,KACA,EAA0BV,mBAAS,IAAnC,mBAAKW,EAAL,KAAaC,EAAb,KACA,EAAgCZ,mBAAS,IAAzC,mBAAOa,EAAP,KAAiBC,EAAjB,KACIC,EAAW,GA6Bf,OA3BIJ,EAAOP,OAAS,EACjBY,OAAOC,UAAY,KAEnBD,OAAOC,UAAY,SAACC,GACjB,GAVW,6BAUEC,OAAOD,EAAEE,MAAQ,EAAG,CAC9B,IAAIC,EAAW,YAAOR,GAElBR,EAAKc,OAAOD,EAAEE,MAAQ,GACvBC,EAAYb,KAAKU,EAAEE,KACnBN,EAAYO,IAEZX,IAAaD,GAGL,YAAOa,SAASC,cAAc,YAAYC,UAC7CC,SAAQ,SAACC,GACdX,EAASP,KAAKkB,EAAKC,WACfC,KAAKC,UAAUvB,KAAasB,KAAKC,UAAUd,IAC5CH,EAAU,gCAIA,IAAZH,GAAiBG,EAAU,gBAMrC,qBAAKkB,UAAU,wCAAf,SACG,sBAAKA,UAAU,YAAf,UACG,oBAAIA,UAAU,SAAd,qBACA,oBAAIA,UAAU,cAAd,4CACA,qBACGA,UAAU,mDACVC,MAAO,CAAEC,MAAO,OAFnB,SAKM1B,EAAQ2B,KAAI,SAACP,EAAMQ,GAChB,OACG,qBAEGJ,UAAU,6DACVC,MAAO,CAAEC,MAAO,OAAQG,OAAQ,OAAQC,WAAY,QAHvD,SAIEvB,EAASwB,SAASX,GAAQA,EAAgB,MAATA,EAAe,IAAkB,IAAZjB,EAAgBiB,EAAO,KAHvEQ,QAQpB,sBAAKJ,UAAU,uBAAf,UACG,oBAAIA,UAAW,6BAA0C,eAAXnB,EAA0B,cAAgB,gBAAxF,SAA0GA,IAC1G,wBACGmB,UAAU,qCACVQ,QAAS,WAAQtB,OAAOuB,SAASC,UAFpC,yBAKH,sBAAKV,UAAW,qBAAuBrB,EAAU,GAAK,GAAK,aAA3D,UACG,qBAAKqB,UAAW,SAAWrB,EAAU,GAAK,GAAK,eAC/C,qBAAKqB,UAAW,YAAcrB,EAAU,EAAI,GAAK,eACjD,qBAAKqB,UAAW,SAAWrB,EAAU,EAAI,GAAK,eAC9C,qBAAKqB,UAAW,QAAUrB,EAAU,EAAI,GAAK,eAC7C,qBAAKqB,UAAW,QAAUrB,EAAU,EAAI,GAAK,eAC7C,qBAAKqB,UAAW,QAAUrB,EAAU,EAAI,GAAK,eAC7C,qBAAKqB,UAAW,YAAcrB,EAAU,EAAI,GAAK,eACjD,qBAAKqB,UAAW,aAAerB,EAAU,EAAI,GAAK,eAClD,qBAAKqB,UAAW,WAAarB,EAAU,EAAI,GAAK,eAChD,qBAAKqB,UAAW,YAAcrB,EAAU,EAAI,GAAK,uBCvFhEgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASsB,eAAe,W","file":"static/js/main.3425d8a8.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './style.scss';\r\n\r\nexport default function Hangman() {\r\n\r\n   const phrases = [\r\n      \"white house\",\r\n      \"donald trump\",\r\n      \"watermelon\",\r\n      \"hit the waves\",\r\n      \"feel the breeze\",\r\n      \"summer memories\",\r\n      \"just add water\",\r\n      \"have a good jorney\",\r\n      \"christmas is coming\",\r\n      \"happy new year\"\r\n   ];\r\n\r\n   let [word] = useState(phrases[Math.floor(Math.random() * phrases.length)]);\r\n   let wordArr = [];\r\n   for (let letter of word) { wordArr.push(letter) };\r\n\r\n   const alphabet = \"abcdefghijklmnopqrstuvwxyz\";\r\n   let [counter, setCounter] = useState(11);\r\n   let [result, setResult] = useState('');\r\n   const [matchArr, setMatchArr] = useState([]);\r\n   let finalArr = [];\r\n\r\n   if (result.length > 0) {\r\n      window.onkeydown = null;\r\n   } else {\r\n      window.onkeydown = (e) => {\r\n         if (alphabet.search(e.key) > -1) {\r\n            let newMatchArr = [...matchArr];\r\n\r\n            if (word.search(e.key) > -1) {\r\n               newMatchArr.push(e.key);\r\n               setMatchArr(newMatchArr);\r\n            } else {\r\n               setCounter(--counter);\r\n            };\r\n\r\n            let letters = [...document.querySelector('.letters').children];\r\n            letters.forEach((item) => {\r\n               finalArr.push(item.innerHTML);\r\n               if (JSON.stringify(wordArr) === JSON.stringify(finalArr)) {\r\n                  setResult('Congratulations! You won!');\r\n               };\r\n            });\r\n\r\n            if (counter === 0) { setResult('Game Over!'); }\r\n         };\r\n      };\r\n   };\r\n\r\n   return (\r\n      <div className=\"hangman py-5 bg-dark h-100 text-white\">\r\n         <div className=\"container\">\r\n            <h1 className=\"header\">Hangman</h1>\r\n            <h5 className=\"text-center\">Start typing to start the game</h5>\r\n            <div\r\n               className=\"letters my-4 centered flex-row mx-auto flex-wrap\"\r\n               style={{ width: \"95%\" }}\r\n            >\r\n               {\r\n                  wordArr.map((item, index) => {\r\n                     return (\r\n                        <div\r\n                           key={index}\r\n                           className=\"m-2 border border-light centered text-uppercase text-white\"\r\n                           style={{ width: \"40px\", height: \"40px\", userSelect: \"none\" }}\r\n                        >{matchArr.includes(item) ? item : item === ' ' ? ' ' : counter === 0 ? item : '*'}</div>\r\n                     );\r\n                  })\r\n               }\r\n            </div>\r\n            <div className=\"centered flex-column\">\r\n               <h1 className={\"text-center fw-bold mb-3 \" + (result === \"Game Over!\" ? \"text-danger\" : \"text-success\")}>{result}</h1>\r\n               <button\r\n                  className=\"btn text-white border border-light\"\r\n                  onClick={() => { window.location.reload(); }}\r\n               >New Word</button>\r\n            </div>\r\n            <div className={\"hangman-container\" + (counter < 11 ? \"\" : \"invisible\")}>\r\n               <div className={\"stick\" + (counter < 10 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"stickhor\" + (counter < 9 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"angle\" + (counter < 8 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"loop\" + (counter < 7 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"head\" + (counter < 6 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"body\" + (counter < 5 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"lefthand\" + (counter < 4 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"righthand\" + (counter < 3 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"leftleg\" + (counter < 2 ? \"\" : \"invisible\")}></div>\r\n               <div className={\"rightleg\" + (counter < 1 ? \"\" : \"invisible\")}></div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './classes.scss';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}